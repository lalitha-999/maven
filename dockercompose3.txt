version: '2.1'

services:
  mysql-master:
    image: 'docker.io/bitnami/mysql:8.0-debian-10'
    ports:
      - '3306'
    volumes:
      - 'mysql_master_data:/bitnami/mysql/data'
    environment:
      - MYSQL_REPLICATION_MODE=master
      - MYSQL_REPLICATION_USER=repl_user
      - MYSQL_USER=my_user
      - MYSQL_DATABASE=my_database
      # ALLOW_EMPTY_PASSWORD is recommended only for development.
      - ALLOW_EMPTY_PASSWORD=yes
      - MYSQL_ROOT_PASSWORD=my_root_password
    healthcheck:
      test: ['CMD', '/opt/bitnami/scripts/mysql/healthcheck.sh']
      interval: 15s
      timeout: 5s
      retries: 6

  mysql-slave:
    image: 'docker.io/bitnami/mysql:8.0-debian-10'
    ports:
      - '3306'
    depends_on:
      - mysql-master
    environment:
      - MYSQL_REPLICATION_MODE=slave
      - MYSQL_REPLICATION_USER=repl_user
      - MYSQL_USER=my_user
      - MYSQL_DATABASE=my_database
      - MYSQL_MASTER_HOST=mysql-master
      - MYSQL_MASTER_PORT_NUMBER=3306
      - MYSQL_MASTER_ROOT_PASSWORD=my_root_password
      # ALLOW_EMPTY_PASSWORD is recommended only for development.
      - ALLOW_EMPTY_PASSWORD=yes
    healthcheck:
      test: ['CMD', '/opt/bitnami/scripts/mysql/healthcheck.sh']
      interval: 15s
      timeout: 5s
      retries: 6

volumes:
  mysql_master_data:
    driver: local




version: '3.5'

services:

  node1:
    image: mysql/mysql-server:8.0
    container_name: node1
    hostname: node1
    ports:
      - "3307:3306"
    restart: unless-stopped
    environment:
      - MYSQL_ROOT_PASSWORD=mypass
    command: ["mysqld",
      "--server-id=1",
      "--log-bin=mysql-bin-1.log",
      "--enforce-gtid-consistency=ON",
      "--log-slave-updates=ON",
      "--gtid-mode=ON",
      "--transaction-write-set-extraction=XXHASH64",
      "--binlog-checksum=NONE",
      "--master-info-repository=TABLE",
      "--relay-log-info-repository=TABLE",
      "--plugin-load=group_replication.so",
      "--relay-log-recovery=ON",
      "--loose-group-replication-start-on-boot=OFF",
      "--loose-group-replication-group-name=aaaaaaaa-bbbb-cccc-dddd-eeeeeeeeeeee",
      "--loose-group-replication-local-address=node1:6606",
      "--loose-group-replication-group-seeds=node1:6606,node2:6606,node3:6606",
      "--loose-group-replication-single-primary-mode=ON",
      "--loose-group-replication-enforce-update-everywhere-checks=OFF"]
    healthcheck:
      test: "mysqladmin ping -u root -p$${MYSQL_ROOT_PASSWORD}"
      interval: 2s
      retries: 20

  node2:
    image: mysql/mysql-server:8.0
    container_name: node2
    hostname: node2
    ports:
      - "3308:3306"
    restart: unless-stopped
    environment:
      - MYSQL_ROOT_PASSWORD=mypass
    command: ["mysqld",
      "--server-id=1",
      "--log-bin=mysql-bin-1.log",
      "--enforce-gtid-consistency=ON",
      "--log-slave-updates=ON",
      "--gtid-mode=ON",
      "--transaction-write-set-extraction=XXHASH64",
      "--binlog-checksum=NONE",
      "--master-info-repository=TABLE",
      "--relay-log-info-repository=TABLE",
      "--plugin-load=group_replication.so",
      "--relay-log-recovery=ON",
      "--loose-group-replication-start-on-boot=OFF",
      "--loose-group-replication-group-name=aaaaaaaa-bbbb-cccc-dddd-eeeeeeeeeeee",
      "--loose-group-replication-local-address=node2:6606",
      "--loose-group-replication-group-seeds=node1:6606,node2:6606,node3:6606",
      "--loose-group-replication-single-primary-mode=ON",
      "--loose-group-replication-enforce-update-everywhere-checks=OFF"]
    healthcheck:
      test: "mysqladmin ping -u root -p$${MYSQL_ROOT_PASSWORD}"
      interval: 2s
      retries: 20
 



















version: '3.5'

services:

  master-sql:
    image: mysql/mysql-server:8.0
    container_name: master1
    hostname: master1
    ports:
      - "3307:3306"
    restart: unless-stopped
    volumes:
      - mysql_db_data_container:/var/lib/mysql
    environment:
      - MYSQL_ROOT_PASSWORD=mypass
    command: ["mysqld",
      "--server-id=1",
      "--log-bin=mysql-bin-1.log",
      "--enforce-gtid-consistency=ON",
      "--log-slave-updates=ON",
      "--plugin-load=group_replication.so",
      "--loose-group-replication-start-on-boot=OFF",
      "--loose-group-replication-single-primary-mode=ON",
      "--loose-group-replication-enforce-update-everywhere-checks=OFF"]
    healthcheck:
      test: "mysqladmin ping -u root -p$${MYSQL_ROOT_PASSWORD}"
      interval: 2s
      retries: 20

  slave-sql:
    image: mysql/mysql-server:8.0
    container_name: slave2
    hostname: slave2
    ports:
      - "3308:3306"
    restart: unless-stopped
    environment:
      - MYSQL_ROOT_PASSWORD=mypass
    command: ["mysqld",
      "--server-id=1",
      "--log-bin=mysql-bin-1.log",
      "--enforce-gtid-consistency=ON",
      "--log-slave-updates=ON",
      "--plugin-load=group_replication.so",
      "--loose-group-replication-start-on-boot=OFF",
      "--loose-group-replication-single-primary-mode=ON",
      "--loose-group-replication-enforce-update-everywhere-checks=OFF"]
    healthcheck:
      test: "mysqladmin ping -u root -p$${MYSQL_ROOT_PASSWORD}"
      interval: 2s
      retries: 20

volumes:
  mysql_db_data_container:
    driver: local






















docker exec -it master1 mysql -uroot -pmypass \
  -e "INSTALL PLUGIN rpl_semi_sync_master SONAME 'semisync_master.so';" \
  -e "SET GLOBAL rpl_semi_sync_master_enabled = 1;" \
  -e "SET GLOBAL rpl_semi_sync_master_wait_for_slave_count = 2;" \
  -e "SHOW VARIABLES LIKE 'rpl_semi_sync%';"


docker exec -it slave2 mysql -uroot -pmypass \
    -e "INSTALL PLUGIN rpl_semi_sync_slave SONAME 'semisync_slave.so';" \
    -e "SET GLOBAL rpl_semi_sync_slave_enabled = 1;" \
    -e "SHOW VARIABLES LIKE 'rpl_semi_sync%';"

docker exec -it master1 mysql -uroot -pmypass \
  -e "INSTALL PLUGIN rpl_semi_sync_master SONAME 'semisync_master.so';" \
  -e "SET GLOBAL rpl_semi_sync_master_enabled = 1;" \
  -e "SET GLOBAL rpl_semi_sync_master_wait_for_slave_count = 2;" \
  -e "SHOW VARIABLES LIKE 'rpl_semi_sync%';"





docker exec -it slave2 mysql -uroot -pmypass \
    -e "INSTALL PLUGIN rpl_semi_sync_slave SONAME 'semisync_slave.so';" \
    -e "SET GLOBAL rpl_semi_sync_slave_enabled = 1;" \
    -e "SHOW VARIABLES LIKE 'rpl_semi_sync%';"











docker exec -it slave2 mysql -uroot -pmypass \
    -e "CHANGE MASTER TO MASTER_HOST='master', MASTER_USER='repl', \
      MASTER_PASSWORD='slavepass', MASTER_LOG_FILE='mysql-bin-1.000003';"

  docker exec -it node2 mysql -uroot -pmypass -e "START SLAVE;"





command: ["mysqld",
      "--server-id=1",
      "--log-bin=mysql-bin-1.log",
      "--enforce-gtid-consistency=ON",
      "--log-slave-updates=ON",
      "--gtid-mode=ON",
      "--transaction-write-set-extraction=XXHASH64",
      "--binlog-checksum=NONE",
      "--master-info-repository=TABLE",
      "--relay-log-info-repository=TABLE",
      "--plugin-load=group_replication.so",
      "--relay-log-recovery=ON",
      "--loose-group-replication-start-on-boot=OFF",
      "--loose-group-replication-group-name=aaaaaaaa-bbbb-cccc-dddd-eeeeeeeeeeee",
      "--loose-group-replication-local-address=node1:6606",
      "--loose-group-replication-group-seeds=node1:6606,node2:6606,node3:6606",
      "--loose-group-replication-single-primary-mode=ON",
      "--loose-group-replication-enforce-update-everywhere-checks=OFF"]



docker exec -it master1 mysql -uroot -pmypass \
  -e "SET @@GLOBAL.group_replication_bootstrap_group=1;" \
  -e "create user 'repl_user'@'%';" \
  -e "GRANT REPLICATION SLAVE ON *.* TO repl_user@'%';" \
  -e "flush privileges;" \
  -e "change master to master_user='root' for channel 'group_replication_recovery';" \
  -e "START GROUP_REPLICATION;" \
  -e "SET @@GLOBAL.group_replication_bootstrap_group=0;" \
  -e "SELECT * FROM performance_schema.replication_group_members;"






































